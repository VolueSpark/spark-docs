openapi: 3.0.1
info:
    title: Spark OpenADR API - Partner Endpoints
    version: v1
servers:
    - url: /vtn/v1
paths:
    /events:
        get:
            tags:
                - Events
            responses:
                '200':
                    description: Success
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    $ref: '#/components/schemas/SparkEvent'
    '/events/{eventId}':
        get:
            tags:
                - Events
            parameters:
                - name: eventId
                  in: path
                  required: true
                  schema:
                      type: string
            responses:
                '200':
                    description: Success
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/SparkEvent'
                '404':
                    description: Not Found
    /reports:
        get:
            tags:
                - Reports
            responses:
                '200':
                    description: Success
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    $ref: '#/components/schemas/SparkReport'
        post:
            tags:
                - Reports
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/SparkReport'
                required: true
            responses:
                '200':
                    description: Success
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/SparkReport'
    '/reports/{reportId}':
        get:
            tags:
                - Reports
            parameters:
                - name: reportId
                  in: path
                  required: true
                  schema:
                      type: string
            responses:
                '200':
                    description: Success
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/SparkReport'
                '404':
                    description: Not Found
        put:
            tags:
                - Reports
            parameters:
                - name: reportId
                  in: path
                  required: true
                  schema:
                      type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/SparkReport'
                required: true
            responses:
                '200':
                    description: Success
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/SparkReport'
                '404':
                    description: Not Found
        delete:
            tags:
                - Reports
            parameters:
                - name: reportId
                  in: path
                  required: true
                  schema:
                      type: string
            responses:
                '200':
                    description: Success
    '/reports/{reportId}/test':
        post:
            tags:
                - Reports
            parameters:
                - name: reportId
                  in: path
                  required: true
                  schema:
                      type: string
            responses:
                '200':
                    description: Success
    /resources:
        get:
            tags:
                - Resources
            parameters:
                - name: skip
                  in: query
                  schema:
                      type: integer
                      format: int32
                      default: 0
                - name: take
                  in: query
                  schema:
                      type: integer
                      format: int32
                      default: 100
            responses:
                '200':
                    description: Success
        post:
            tags:
                - Resources
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/Resource'
                required: true
            responses:
                '200':
                    description: Success
        put:
            tags:
                - Resources
            responses:
                '200':
                    description: Success
        delete:
            tags:
                - Resources
            responses:
                '200':
                    description: Success
    '/resources/{eventId}':
        get:
            tags:
                - Resources
            parameters:
                - name: id
                  in: query
                  required: true
                  schema:
                      type: string
            responses:
                '200':
                    description: Success
    /subscriptions:
        get:
            tags:
                - Subscriptions
            parameters:
                - name: programId
                  in: query
                  schema:
                      type: string
            responses:
                '200':
                    description: Success
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    $ref: '#/components/schemas/BaseSubscription'
        post:
            tags:
                - Subscriptions
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/PostSubscriptionRequest'
                required: true
            responses:
                '200':
                    description: Success
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/BaseSubscription'
    '/subscriptions/{subscriptionId}':
        get:
            tags:
                - Subscriptions
            parameters:
                - name: subscriptionId
                  in: path
                  required: true
                  schema:
                      type: string
            responses:
                '200':
                    description: Success
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/BaseSubscription'
                '404':
                    description: Not Found
        put:
            tags:
                - Subscriptions
            responses:
                '200':
                    description: Success
        delete:
            tags:
                - Subscriptions
            responses:
                '200':
                    description: Success
    '/subscriptions/{subscriptionId}/test':
        post:
            tags:
                - Subscriptions
            responses:
                '200':
                    description: Success
components:
    schemas:
        BaseSubscription:
            type: object
            properties:
                id:
                    type: string
                    nullable: true
                programId:
                    type: string
                    nullable: true
                webhookUrl:
                    type: string
                    nullable: true
            additionalProperties: false
        Coordinate:
            type: object
            properties:
                x:
                    type: number
                    format: double
                y:
                    type: number
                    format: double
                z:
                    type: number
                    format: double
                m:
                    type: number
                    format: double
                coordinateValue:
                    $ref: '#/components/schemas/Coordinate'
                isValid:
                    type: boolean
                    readOnly: true
            additionalProperties: false
        CoordinateEqualityComparer:
            type: object
            additionalProperties: false
        CoordinateSequence:
            type: object
            properties:
                dimension:
                    type: integer
                    format: int32
                    readOnly: true
                measures:
                    type: integer
                    format: int32
                    readOnly: true
                spatial:
                    type: integer
                    format: int32
                    readOnly: true
                ordinates:
                    $ref: '#/components/schemas/Ordinates'
                hasZ:
                    type: boolean
                    readOnly: true
                hasM:
                    type: boolean
                    readOnly: true
                zOrdinateIndex:
                    type: integer
                    format: int32
                    readOnly: true
                mOrdinateIndex:
                    type: integer
                    format: int32
                    readOnly: true
                first:
                    $ref: '#/components/schemas/Coordinate'
                last:
                    $ref: '#/components/schemas/Coordinate'
                count:
                    type: integer
                    format: int32
                    readOnly: true
            additionalProperties: false
        CoordinateSequenceFactory:
            type: object
            properties:
                ordinates:
                    $ref: '#/components/schemas/Ordinates'
            additionalProperties: false
        CurrentLevelPayload:
            type: object
            allOf:
                - $ref: '#/components/schemas/SparkEventPayload'
            properties:
                targetCurrent:
                    type: number
                    format: double
            additionalProperties: false
        Dimension:
            enum:
                - P
                - Curve
                - A
                - Collapse
                - Dontcare
                - 'True'
                - Unknown
            type: string
        Envelope:
            type: object
            properties:
                isNull:
                    type: boolean
                    readOnly: true
                width:
                    type: number
                    format: double
                    readOnly: true
                height:
                    type: number
                    format: double
                    readOnly: true
                diameter:
                    type: number
                    format: double
                    readOnly: true
                minX:
                    type: number
                    format: double
                    readOnly: true
                maxX:
                    type: number
                    format: double
                    readOnly: true
                minY:
                    type: number
                    format: double
                    readOnly: true
                maxY:
                    type: number
                    format: double
                    readOnly: true
                area:
                    type: number
                    format: double
                    readOnly: true
                minExtent:
                    type: number
                    format: double
                    readOnly: true
                maxExtent:
                    type: number
                    format: double
                    readOnly: true
                centre:
                    $ref: '#/components/schemas/Coordinate'
            additionalProperties: false
        Geometry:
            type: object
            properties:
                factory:
                    $ref: '#/components/schemas/GeometryFactory'
                userData:
                    nullable: true
                srid:
                    type: integer
                    format: int32
                geometryType:
                    type: string
                    nullable: true
                    readOnly: true
                ogcGeometryType:
                    $ref: '#/components/schemas/OgcGeometryType'
                precisionModel:
                    $ref: '#/components/schemas/PrecisionModel'
                coordinate:
                    $ref: '#/components/schemas/Coordinate'
                coordinates:
                    type: array
                    items:
                        $ref: '#/components/schemas/Coordinate'
                    nullable: true
                    readOnly: true
                numPoints:
                    type: integer
                    format: int32
                    readOnly: true
                numGeometries:
                    type: integer
                    format: int32
                    readOnly: true
                isSimple:
                    type: boolean
                    readOnly: true
                isValid:
                    type: boolean
                    readOnly: true
                isEmpty:
                    type: boolean
                    readOnly: true
                area:
                    type: number
                    format: double
                    readOnly: true
                length:
                    type: number
                    format: double
                    readOnly: true
                centroid:
                    $ref: '#/components/schemas/Point'
                interiorPoint:
                    $ref: '#/components/schemas/Point'
                pointOnSurface:
                    $ref: '#/components/schemas/Point'
                dimension:
                    $ref: '#/components/schemas/Dimension'
                boundary:
                    $ref: '#/components/schemas/Geometry'
                boundaryDimension:
                    $ref: '#/components/schemas/Dimension'
                envelope:
                    $ref: '#/components/schemas/Geometry'
                envelopeInternal:
                    $ref: '#/components/schemas/Envelope'
                isRectangle:
                    type: boolean
                    readOnly: true
            additionalProperties: false
        GeometryFactory:
            type: object
            properties:
                precisionModel:
                    $ref: '#/components/schemas/PrecisionModel'
                coordinateSequenceFactory:
                    $ref: '#/components/schemas/CoordinateSequenceFactory'
                srid:
                    type: integer
                    format: int32
                    readOnly: true
                geometryServices:
                    $ref: '#/components/schemas/NtsGeometryServices'
            additionalProperties: false
        GeometryOverlay:
            type: object
            additionalProperties: false
        IntervalPeriod:
            type: object
            properties:
                duration:
                    type: string
                    example: '02:00:00'
                start:
                    type: string
                    format: date-time
                randomizeStart:
                    type: string
                    nullable: true
                    example: '02:00:00'
            additionalProperties: false
        Location:
            type: object
            properties:
                latitude:
                    type: number
                    format: double
                longitude:
                    type: number
                    format: double
            additionalProperties: false
        NtsGeometryServices:
            type: object
            properties:
                geometryOverlay:
                    $ref: '#/components/schemas/GeometryOverlay'
                coordinateEqualityComparer:
                    $ref: '#/components/schemas/CoordinateEqualityComparer'
                defaultSRID:
                    type: integer
                    format: int32
                    readOnly: true
                defaultCoordinateSequenceFactory:
                    $ref: '#/components/schemas/CoordinateSequenceFactory'
                defaultPrecisionModel:
                    $ref: '#/components/schemas/PrecisionModel'
            additionalProperties: false
        OgcGeometryType:
            enum:
                - Point
                - LineString
                - Polygon
                - MultiPoint
                - MultiLineString
                - MultiPolygon
                - GeometryCollection
                - CircularString
                - CompoundCurve
                - CurvePolygon
                - MultiCurve
                - MultiSurface
                - Curve
                - Surface
                - PolyhedralSurface
                - TIN
            type: string
        Ordinates:
            enum:
                - None
                - X
                - Y
                - XY
                - Spatial3
                - XYZ
                - Spatial4
                - Spatial5
                - Spatial6
                - Spatial7
                - Spatial8
                - Spatial9
                - Spatial10
                - Spatial11
                - Spatial12
                - Spatial13
                - Spatial14
                - Spatial15
                - Spatial16
                - AllSpatialOrdinates
                - Measure1
                - XYM
                - XYZM
                - Measure2
                - Measure3
                - Measure4
                - Measure5
                - Measure6
                - Measure7
                - Measure8
                - Measure9
                - Measure10
                - Measure11
                - Measure12
                - Measure13
                - Measure14
                - Measure15
                - Measure16
                - AllMeasureOrdinates
                - AllOrdinates
            type: string
        Point:
            type: object
            properties:
                factory:
                    $ref: '#/components/schemas/GeometryFactory'
                userData:
                    nullable: true
                srid:
                    type: integer
                    format: int32
                precisionModel:
                    $ref: '#/components/schemas/PrecisionModel'
                numGeometries:
                    type: integer
                    format: int32
                    readOnly: true
                isSimple:
                    type: boolean
                    readOnly: true
                isValid:
                    type: boolean
                    readOnly: true
                area:
                    type: number
                    format: double
                    readOnly: true
                length:
                    type: number
                    format: double
                    readOnly: true
                centroid:
                    $ref: '#/components/schemas/Point'
                interiorPoint:
                    $ref: '#/components/schemas/Point'
                pointOnSurface:
                    $ref: '#/components/schemas/Point'
                envelope:
                    $ref: '#/components/schemas/Geometry'
                envelopeInternal:
                    $ref: '#/components/schemas/Envelope'
                isRectangle:
                    type: boolean
                    readOnly: true
                coordinateSequence:
                    $ref: '#/components/schemas/CoordinateSequence'
                coordinates:
                    type: array
                    items:
                        $ref: '#/components/schemas/Coordinate'
                    nullable: true
                    readOnly: true
                numPoints:
                    type: integer
                    format: int32
                    readOnly: true
                isEmpty:
                    type: boolean
                    readOnly: true
                dimension:
                    $ref: '#/components/schemas/Dimension'
                boundaryDimension:
                    $ref: '#/components/schemas/Dimension'
                x:
                    type: number
                    format: double
                y:
                    type: number
                    format: double
                coordinate:
                    $ref: '#/components/schemas/Coordinate'
                geometryType:
                    type: string
                    nullable: true
                    readOnly: true
                ogcGeometryType:
                    $ref: '#/components/schemas/OgcGeometryType'
                boundary:
                    $ref: '#/components/schemas/Geometry'
                z:
                    type: number
                    format: double
                m:
                    type: number
                    format: double
            additionalProperties: false
        PostSubscriptionRequest:
            type: object
            properties:
                programId:
                    type: string
                    nullable: true
                webhookUrl:
                    type: string
                    nullable: true
            additionalProperties: false
        PowerLevelPayload:
            type: object
            allOf:
                - $ref: '#/components/schemas/SparkEventPayload'
            properties:
                targetPower:
                    type: number
                    format: double
            additionalProperties: false
        PrecisionModel:
            type: object
            properties:
                isFloating:
                    type: boolean
                    readOnly: true
                maximumSignificantDigits:
                    type: integer
                    format: int32
                    readOnly: true
                scale:
                    type: number
                    format: double
                gridSize:
                    type: number
                    format: double
                    readOnly: true
                precisionModelType:
                    $ref: '#/components/schemas/PrecisionModels'
            additionalProperties: false
        PrecisionModels:
            enum:
                - Floating
                - FloatingSingle
                - Fixed
            type: string
        ReportDescriptor:
            type: object
            properties:
                payloadType:
                    type: string
                    nullable: true
                readingType:
                    type: string
                    nullable: true
                targets:
                    type: array
                    items:
                        $ref: '#/components/schemas/Target'
                    nullable: true
                aggregate:
                    type: boolean
                frequency:
                    type: integer
                    format: int32
                historical:
                    type: boolean
                numIntervals:
                    type: integer
                    format: int32
                repeat:
                    type: integer
                    format: int32
                startInterval:
                    type: integer
                    format: int32
            additionalProperties: false
        Resource:
            type: object
            properties:
                id:
                    type: string
                    nullable: true
                name:
                    type: string
                    nullable: true
                location:
                    $ref: '#/components/schemas/Point'
                currentAmperage:
                    type: number
                    format: double
            additionalProperties: false
        SparkEvent:
            type: object
            properties:
                createdDateTime:
                    type: string
                    format: date-time
                ID:
                    type: string
                    nullable: true
                modificationDateTime:
                    type: string
                    format: date-time
                name:
                    type: string
                    nullable: true
                priority:
                    type: integer
                    format: int32
                programID:
                    type: string
                    nullable: true
                reportDescriptors:
                    type: array
                    items:
                        $ref: '#/components/schemas/ReportDescriptor'
                    nullable: true
                targets:
                    type: array
                    items:
                        $ref: '#/components/schemas/Target'
                    nullable: true
                intervalPeriod:
                    $ref: '#/components/schemas/IntervalPeriod'
                payload:
                    oneOf:
                        - $ref: '#/components/schemas/CurrentLevelPayload'
                        - $ref: '#/components/schemas/PowerLevelPayload'
            additionalProperties: false
        SparkEventPayload:
            type: object
            properties:
                payloadType:
                    $ref: '#/components/schemas/SparkEventPayloadType'
            additionalProperties: false
            discriminator:
                propertyName: payloadType
                mapping:
                    CurrentLevel: '#/components/schemas/CurrentLevelPayload'
                    PowerLevel: '#/components/schemas/PowerLevelPayload'
        SparkEventPayloadType:
            enum:
                - Unknown
                - CurrentLevel
                - PowerLevel
            type: string
        SparkReport:
            type: object
            properties:
                clientID:
                    type: string
                    nullable: true
                createdDateTime:
                    type: string
                    format: date-time
                eventID:
                    type: string
                    nullable: true
                ID:
                    type: string
                    nullable: true
                modificationDateTime:
                    type: string
                    format: date-time
                name:
                    type: string
                    nullable: true
                programID:
                    type: string
                    nullable: true
                payloads:
                    type: array
                    items:
                        oneOf:
                            - $ref: '#/components/schemas/VehicleChargeActionPayload'
                    nullable: true
            additionalProperties: false
        SparkReportPayload:
            type: object
            properties:
                payloadType:
                    $ref: '#/components/schemas/SparkReportPayloadType'
            additionalProperties: false
            discriminator:
                propertyName: payloadType
                mapping:
                    VehicleChargeAction: '#/components/schemas/VehicleChargeActionPayload'
        SparkReportPayloadType:
            enum:
                - Unknown
                - VehicleChargeAction
            type: string
        Target:
            type: object
            properties:
                targetType:
                    type: string
                    nullable: true
                values:
                    type: array
                    items:
                        type: string
                    nullable: true
            additionalProperties: false
        VehicleChargeActionPayload:
            type: object
            allOf:
                - $ref: '#/components/schemas/SparkReportPayload'
            properties:
                resourceId:
                    type: string
                    nullable: true
                location:
                    $ref: '#/components/schemas/Location'
                actionType:
                    $ref: '#/components/schemas/VehicleChargeActionType'
                current:
                    type: number
                    format: double
                    nullable: true
                power:
                    type: number
                    format: double
                    nullable: true
                stateOfCharge:
                    type: number
                    format: double
                    nullable: true
                batteryCapacity:
                    type: number
                    format: double
                    nullable: true
            additionalProperties: false
        VehicleChargeActionType:
            enum:
                - Unknown
                - Start
                - Stop
            type: string
    securitySchemes:
        Bearer:
            type: http
            description: Enter the JWT-token. Bearer will be prepended.
            scheme: Bearer
security:
    - Bearer: []
