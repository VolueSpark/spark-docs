openapi: 3.0.1
info:
    title: Spark OpenADR API - Partner Endpoints
    version: v1
servers:
    - url: /vtn/v1
paths:
    /events:
        get:
            tags:
                - Events
            responses:
                '200':
                    description: Success
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    $ref: '#/components/schemas/SparkEvent'
                '400':
                    description: Bad Request
                    content:
                        application/json:
                            schema:
                                type: string
    '/events/{eventId}':
        get:
            tags:
                - Events
            parameters:
                - name: eventId
                  in: path
                  required: true
                  schema:
                      type: string
            responses:
                '200':
                    description: Success
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/SparkEvent'
                '404':
                    description: Not Found
                '400':
                    description: Bad Request
                    content:
                        application/json:
                            schema:
                                type: string
    /reports:
        post:
            tags:
                - Reports
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/CreateReportRequest'
                required: true
            responses:
                '200':
                    description: Success
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/SparkReport'
                '400':
                    description: Bad Request
                    content:
                        application/json:
                            schema:
                                type: string
    '/reports/{reportId}/test':
        post:
            tags:
                - Reports
            parameters:
                - name: reportId
                  in: path
                  required: true
                  schema:
                      type: string
            responses:
                '200':
                    description: Success
    /resources:
        get:
            tags:
                - Resources
            responses:
                '200':
                    description: Success
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    $ref: '#/components/schemas/SparkResource'
                '400':
                    description: Bad Request
                    content:
                        application/json:
                            schema:
                                type: string
        post:
            tags:
                - Resources
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/CreateResourceRequest'
                required: true
            responses:
                '200':
                    description: Success
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/SparkResource'
                '400':
                    description: Bad Request
                    content:
                        application/json:
                            schema:
                                type: string
        put:
            tags:
                - Resources
            parameters:
                - name: resourceId
                  in: query
                  required: true
                  schema:
                      type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/SparkResource'
                required: true
            responses:
                '200':
                    description: Success
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/SparkResource'
                '400':
                    description: Bad Request
                    content:
                        application/json:
                            schema:
                                type: string
        delete:
            tags:
                - Resources
            parameters:
                - name: resourceId
                  in: query
                  required: true
                  schema:
                      type: string
            responses:
                '204':
                    description: No Content
                '400':
                    description: Bad Request
                    content:
                        application/json:
                            schema:
                                type: string
    '/resources/{eventId}':
        get:
            tags:
                - Resources
            parameters:
                - name: id
                  in: query
                  required: true
                  schema:
                      type: string
            responses:
                '200':
                    description: Success
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/SparkResource'
                '404':
                    description: Not Found
                '400':
                    description: Bad Request
                    content:
                        application/json:
                            schema:
                                type: string
    /subscriptions:
        get:
            tags:
                - Subscriptions
            parameters:
                - name: programId
                  in: query
                  schema:
                      type: string
            responses:
                '200':
                    description: Success
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    $ref: '#/components/schemas/BaseSubscription'
        post:
            tags:
                - Subscriptions
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/PostSubscriptionRequest'
                required: true
            responses:
                '200':
                    description: Success
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/BaseSubscription'
    '/subscriptions/{subscriptionId}':
        get:
            tags:
                - Subscriptions
            parameters:
                - name: subscriptionId
                  in: path
                  required: true
                  schema:
                      type: string
            responses:
                '200':
                    description: Success
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/BaseSubscription'
                '404':
                    description: Not Found
        put:
            tags:
                - Subscriptions
            responses:
                '200':
                    description: Success
        delete:
            tags:
                - Subscriptions
            responses:
                '200':
                    description: Success
    '/subscriptions/{subscriptionId}/test':
        post:
            tags:
                - Subscriptions
            responses:
                '200':
                    description: Success
components:
    schemas:
        BaseSubscription:
            type: object
            properties:
                id:
                    type: string
                    nullable: true
                programId:
                    type: string
                    nullable: true
                webhookUrl:
                    type: string
                    nullable: true
                clientId:
                    type: string
                    nullable: true
                venId:
                    type: string
                    nullable: true
            additionalProperties: false
        CreateReportRequest:
            type: object
            properties:
                eventId:
                    type: string
                    nullable: true
                name:
                    type: string
                    nullable: true
                payloads:
                    type: array
                    items:
                        oneOf:
                            - $ref: '#/components/schemas/VehicleChargeActionPayload'
                    nullable: true
            additionalProperties: false
        CreateResourceRequest:
            type: object
            properties:
                resourceId:
                    type: string
                    nullable: true
                metadata:
                    oneOf:
                        - $ref: '#/components/schemas/VehicleMetadata'
            additionalProperties: false
        CurrentLevelPayload:
            type: object
            allOf:
                - $ref: '#/components/schemas/SparkEventPayload'
            properties:
                targetCurrent:
                    type: number
                    format: double
            additionalProperties: false
        IntervalPeriod:
            type: object
            properties:
                duration:
                    type: string
                    example: '02:00:00'
                start:
                    type: string
                    format: date-time
                randomizeStart:
                    type: string
                    nullable: true
                    example: '02:00:00'
            additionalProperties: false
        Location:
            type: object
            properties:
                latitude:
                    type: number
                    format: double
                longitude:
                    type: number
                    format: double
            additionalProperties: false
        PostSubscriptionRequest:
            type: object
            properties:
                programId:
                    type: string
                    nullable: true
                webhookUrl:
                    type: string
                    nullable: true
            additionalProperties: false
        PowerLevelPayload:
            type: object
            allOf:
                - $ref: '#/components/schemas/SparkEventPayload'
            properties:
                targetPower:
                    type: number
                    format: double
            additionalProperties: false
        ReportDescriptor:
            type: object
            properties:
                payloadType:
                    type: string
                    nullable: true
                readingType:
                    type: string
                    nullable: true
                targets:
                    type: array
                    items:
                        $ref: '#/components/schemas/Target'
                    nullable: true
                aggregate:
                    type: boolean
                frequency:
                    type: integer
                    format: int32
                historical:
                    type: boolean
                numIntervals:
                    type: integer
                    format: int32
                repeat:
                    type: integer
                    format: int32
                startInterval:
                    type: integer
                    format: int32
            additionalProperties: false
        SparkEvent:
            type: object
            properties:
                createdDateTime:
                    type: string
                    format: date-time
                ID:
                    type: string
                    nullable: true
                clientID:
                    type: string
                    nullable: true
                modificationDateTime:
                    type: string
                    format: date-time
                name:
                    type: string
                    nullable: true
                priority:
                    type: integer
                    format: int32
                programID:
                    type: string
                    nullable: true
                reportDescriptors:
                    type: array
                    items:
                        $ref: '#/components/schemas/ReportDescriptor'
                    nullable: true
                targets:
                    type: array
                    items:
                        $ref: '#/components/schemas/Target'
                    nullable: true
                intervalPeriod:
                    $ref: '#/components/schemas/IntervalPeriod'
                payload:
                    oneOf:
                        - $ref: '#/components/schemas/CurrentLevelPayload'
                        - $ref: '#/components/schemas/PowerLevelPayload'
            additionalProperties: false
        SparkEventPayload:
            type: object
            properties:
                payloadType:
                    $ref: '#/components/schemas/SparkEventPayloadType'
            additionalProperties: false
            discriminator:
                propertyName: payloadType
                mapping:
                    CurrentLevel: '#/components/schemas/CurrentLevelPayload'
                    PowerLevel: '#/components/schemas/PowerLevelPayload'
        SparkEventPayloadType:
            enum:
                - Unknown
                - CurrentLevel
                - PowerLevel
            type: string
        SparkReport:
            type: object
            properties:
                clientID:
                    type: string
                    nullable: true
                createdDateTime:
                    type: string
                    format: date-time
                eventID:
                    type: string
                    nullable: true
                ID:
                    type: string
                    nullable: true
                modificationDateTime:
                    type: string
                    format: date-time
                name:
                    type: string
                    nullable: true
                programID:
                    type: string
                    nullable: true
                payloads:
                    type: array
                    items:
                        oneOf:
                            - $ref: '#/components/schemas/VehicleChargeActionPayload'
                    nullable: true
            additionalProperties: false
        SparkReportPayload:
            type: object
            properties:
                payloadType:
                    $ref: '#/components/schemas/SparkReportPayloadType'
            additionalProperties: false
            discriminator:
                propertyName: payloadType
                mapping:
                    VehicleChargeAction: '#/components/schemas/VehicleChargeActionPayload'
        SparkReportPayloadType:
            enum:
                - Unknown
                - VehicleChargeAction
            type: string
        SparkResource:
            type: object
            properties:
                id:
                    type: string
                    nullable: true
                resourceId:
                    type: string
                    nullable: true
                clientId:
                    type: string
                    nullable: true
                metadata:
                    oneOf:
                        - $ref: '#/components/schemas/VehicleMetadata'
            additionalProperties: false
        SparkResourceMetadata:
            type: object
            properties:
                resourceType:
                    $ref: '#/components/schemas/SparkResourceType'
            additionalProperties: false
            discriminator:
                propertyName: resourceType
                mapping:
                    Vehicle: '#/components/schemas/VehicleMetadata'
        SparkResourceType:
            enum:
                - Unknown
                - Vehicle
            type: string
        Target:
            type: object
            properties:
                targetType:
                    type: string
                    nullable: true
                values:
                    type: array
                    items:
                        type: string
                    nullable: true
            additionalProperties: false
        VehicleChargeActionPayload:
            type: object
            allOf:
                - $ref: '#/components/schemas/SparkReportPayload'
            properties:
                resourceId:
                    type: string
                    nullable: true
                location:
                    $ref: '#/components/schemas/Location'
                actionType:
                    $ref: '#/components/schemas/VehicleChargeActionType'
                current:
                    type: number
                    format: double
                    nullable: true
                power:
                    type: number
                    format: double
                    nullable: true
                stateOfCharge:
                    type: number
                    format: double
                    nullable: true
                batteryCapacity:
                    type: number
                    format: double
                    nullable: true
            additionalProperties: false
        VehicleChargeActionType:
            enum:
                - Unknown
                - Start
                - Stop
            type: string
        VehicleMetadata:
            type: object
            allOf:
                - $ref: '#/components/schemas/SparkResourceMetadata'
            properties:
                brand:
                    type: string
                    nullable: true
                model:
                    type: string
                    nullable: true
                year:
                    type: integer
                    format: int32
                vin:
                    type: string
                    nullable: true
            additionalProperties: false
    securitySchemes:
        Bearer:
            type: http
            description: Enter the JWT-token. Bearer will be prepended.
            scheme: Bearer
security:
    - Bearer: []
